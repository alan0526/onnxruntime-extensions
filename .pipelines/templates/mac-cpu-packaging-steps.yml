parameters:
- name: MacosArch
  type: string
  values:
  - 'x86_64'
  - 'arm64'
  - 'universal2'
  default: 'x86_64'

- name: AdditionalBuildFlags
  displayName: Additional build flags for build.py
  type: string
  default: ''

- name: WithCache
  displayName: Build with Cache
  type: boolean
  default: false

- name: CacheDir
  displayName: Cache Directory
  type: string
  default: ''

- name: Today
  type: string
  default: ""

steps:
- template: mac-build-step-with-cache.yml
  parameters:
    WithCache: ${{ parameters.WithCache }}
    Today: ${{ parameters.Today }}
    AdditionalKey: onnxruntime-extensions_${{ parameters.MacosArch }}
    CacheDir: ${{ parameters.CacheDir }}
    ChangeEveryCommit: true
    BuildStep:
      - script: |
          cd $(Build.SourcesDirectory)
          rm -rf out/
          export CFLAGS="-Wl,--strip-all"
          export CXXFLAGS="-Wl,--strip-all"
          ./build.sh -DOCOS_ENABLE_CV2=OFF -DOCOS_ENABLE_BLINGFIRE=OFF
          ls out/*
        displayName: 'Build ${{ parameters.MacosArch }}'
        env:
          CCACHE_DIR: ${{ parameters.CacheDir }}
- template: set-package-version-variable-step.yml
  parameters:
    IsReleaseBuild: true
    PackageVersionVariableName: ORT_EXTENSIONS_VERSION

- task: Bash@3
  displayName: 'Copy build artifacts for zipping'
  inputs:
    targetType: 'inline'
    script: |
      target_lib_path=onnxruntime-extensions-osx-${{ parameters.MacosArch }}-$(ORT_EXTENSIONS_VERSION)/lib
      mkdir -p $target_lib_path
      cp $(Build.SourcesDirectory)/out/Darwin/RelWithDebInfo/lib/libortextensions.dylib  ${target_lib_path}/
    workingDirectory: '$(Build.BinariesDirectory)'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)/onnxruntime-extensions-osx-${{ parameters.MacosArch }}-$(ORT_EXTENSIONS_VERSION)'
    includeRootFolder: true
    archiveType: 'tar' # Options: zip, 7z, tar, wim
    tarCompression: 'gz'
    archiveFile: '$(Build.ArtifactStagingDirectory)/onnxruntime-extensions-osx-${{ parameters.MacosArch }}.tgz'
    replaceExistingArchive: true


- publish: '$(Build.ArtifactStagingDirectory)'
  artifact: 'onnxruntime-extensions-osx-${{ parameters.MacosArch }}'